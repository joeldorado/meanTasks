import {MiddlewareLogger} from "../core/logger";
import {IResolver} from "../core/resolver";
import * as configurator from "../core/config";
import {resolveWithExtensions, isValidNpmPackageName} from "./helpers";
import {fileExists, directoryExists} from "../helpers/fs";

const config = configurator.get();

export class ResolverUnderNpmPackageDistFolder implements IResolver {
    get name() {
        return "underNpmPackageDistFolder";
    }

    resolve(fileName: string, logger: MiddlewareLogger): Promise<string> {
        return Promise.resolve().then(() => {
            if(!isValidNpmPackageName(fileName)) {
                logger.log("SKIP underNpmPackageDistFolder lookup since " + fileName + " is not considered a file name");
                return Promise.resolve("");
            }

            const packageName = fileName;
            const distFolder = "node_modules/" + packageName + "/dist";
            return directoryExists(distFolder).then(exists => {
                if(!exists) {
                    logger.log("NOT FOUND " + distFolder);

                    return "";
                }

                return resolveWithExtensions(distFolder + "/" + packageName, config.defaultExtensions, logger);
            });
        });
    }
}
