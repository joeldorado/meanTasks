"use strict";
var fs = require('fs');
function fileExists(filePath) {
    return new Promise(function (resolve, reject) {
        fs.stat(filePath, function (err, stats) {
            if (err) {
                if (err.code == "ENOENT") {
                    resolve(false);
                }
                else {
                    reject(err);
                }
            }
            else {
                resolve(stats.isFile());
            }
        });
    });
}
exports.fileExists = fileExists;
function directoryExists(filePath) {
    return new Promise(function (resolve, reject) {
        fs.stat(filePath, function (err, stats) {
            if (err) {
                if (err.code == "ENOENT") {
                    resolve(false);
                }
                else {
                    reject(err);
                }
            }
            else {
                resolve(stats.isDirectory());
            }
        });
    });
}
exports.directoryExists = directoryExists;
function readFileContent(filePath) {
    return new Promise(function (resolve, reject) {
        fs.readFile(filePath, 'utf8', function (err, content) {
            if (err) {
                reject(err);
                return;
            }
            resolve(content);
        });
    });
}
exports.readFileContent = readFileContent;
function readJson(filePath) {
    return readFileContent(filePath).then(function (content) { return JSON.parse(content); });
}
exports.readJson = readJson;
