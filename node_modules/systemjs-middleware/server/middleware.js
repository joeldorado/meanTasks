"use strict";
var logger_1 = require("../core/logger");
var configurator = require("../core/config");
var resolvers_1 = require("./resolvers");
var fs_1 = require("../helpers/fs");
function init(req, res) {
    var clientJSLocation = configurator.resolvePath("node_modules/systemjs-middleware/client/client.js");
    fs_1.readFileContent(clientJSLocation).then(function (content) {
        res.write(content);
        res.end();
    }).catch(function (err) {
        res.stausMessage = err.message;
        res.status(500).end();
    });
}
function config(req, res) {
    locateSystemJS()
        .then(function (systemJSLocation) {
        res.json({
            systemJSLocation: systemJSLocation,
            basePath: configurator.get().basePath
        });
    })
        .catch(function (err) {
        res.statusMessage = err.message;
        res.status(500).end();
    });
}
function locateSystemJS() {
    var path = "node_modules/systemjs/dist/system.src.js";
    return fs_1.fileExists(configurator.resolvePath(path))
        .then(function (exists) {
        if (!exists) {
            throw new Error("system.src.js was not found. Ensure systemjs was installed using npm ?");
        }
        return path;
    });
}
function locate(req, res) {
    var path = req.query.path;
    var logger = new logger_1.MiddlewareLogger();
    resolvers_1.resolvers.resolve(path, logger)
        .then(function (path) {
        res.json({
            path: path,
            log: logger.logs,
        }).end();
    })
        .catch(function (err) {
        console.error(err);
        res.json({
            err: err,
            log: logger.logs,
        }).end();
    });
}
function setup(app) {
    if (!app) {
        throw new Error("SystemJS middleware setup must receive a reference to an express application instance");
    }
    console.log("The following resolvers are installed");
    for (var _i = 0, _a = resolvers_1.resolvers.resolvers; _i < _a.length; _i++) {
        var resolver = _a[_i];
        console.log("    " + resolver.name);
    }
    app.get('/systemjs/init', init);
    app.get('/systemjs/config', config);
    app.get('/systemjs/locate', locate);
}
exports.setup = setup;
function configure(c) {
    configurator.set(c);
}
exports.configure = configure;
