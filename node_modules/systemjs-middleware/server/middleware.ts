import {MiddlewareLogger} from "../core/logger";
import * as configurator from "../core/config";
import {resolvers} from "./resolvers";
import {fileExists, readJson, readFileContent} from "../helpers/fs";

function init(req, res) {
    const clientJSLocation = configurator.resolvePath("node_modules/systemjs-middleware/client/client.js");
    readFileContent(clientJSLocation).then(content => {
        res.write(content);
        res.end();
    }).catch(err => {
        res.stausMessage = err.message;
        res.status(500).end();
    });
}

function config(req, res) {
    locateSystemJS()
        .then(systemJSLocation => {
            res.json({
                systemJSLocation: systemJSLocation,
                basePath: configurator.get().basePath
            });
        })
        .catch(err => {
            res.statusMessage = err.message;
            res.status(500).end();
        });
}

function locateSystemJS() {
    const path = "node_modules/systemjs/dist/system.src.js";
    return fileExists(configurator.resolvePath(path))
        .then(exists => {
            if(!exists) {
                throw new Error("system.src.js was not found. Ensure systemjs was installed using npm ?");
            }

            return path;
        });
}

function locate(req, res) {
    const path = req.query.path;
    const logger = new MiddlewareLogger();

    resolvers.resolve(path, logger)
        .then(path => {
            res.json({
                path: path,
                log: logger.logs,
            }).end();
        })
        .catch(function(err) {
            console.error(err);

            res.json({
                err: err,
                log: logger.logs,
            }).end();
        });
}

export function setup(app) {
    if(!app) {
        throw new Error("SystemJS middleware setup must receive a reference to an express application instance");
    }

    console.log("The following resolvers are installed");
    for(let resolver of resolvers.resolvers) {
        console.log("    " + resolver.name);
    }

    app.get('/systemjs/init', init);
    app.get('/systemjs/config', config);
    app.get('/systemjs/locate', locate);
}

export function configure(c) {
    configurator.set(c);
}
